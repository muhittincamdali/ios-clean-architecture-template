name: iOS CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test iOS App
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install CocoaPods
      run: |
        sudo gem install cocoapods
        pod --version
        
    - name: Install dependencies
      run: |
        pod install
        
    - name: Build project
      run: |
        xcodebuild clean build \
          -workspace ios-clean-architecture-template.xcworkspace \
          -scheme ios-clean-architecture-template \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Run unit tests
      run: |
        xcodebuild test \
          -workspace ios-clean-architecture-template.xcworkspace \
          -scheme ios-clean-architecture-template \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Run UI tests
      run: |
        xcodebuild test \
          -workspace ios-clean-architecture-template.xcworkspace \
          -scheme ios-clean-architecture-template \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration Debug \
          -only-testing:ios-clean-architecture-templateUITests \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Run SwiftLint
      run: |
        brew install swiftlint
        swiftlint lint --reporter github-actions-logging
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult
          
  build:
    name: Build iOS App
    runs-on: macos-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install CocoaPods
      run: |
        sudo gem install cocoapods
        pod install
        
    - name: Build for iOS Simulator
      run: |
        xcodebuild archive \
          -workspace ios-clean-architecture-template.xcworkspace \
          -scheme ios-clean-architecture-template \
          -destination 'generic/platform=iOS Simulator' \
          -configuration Release \
          -archivePath ./build/ios-clean-architecture-template.xcarchive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Build for iOS Device
      run: |
        xcodebuild archive \
          -workspace ios-clean-architecture-template.xcworkspace \
          -scheme ios-clean-architecture-template \
          -destination 'generic/platform=iOS' \
          -configuration Release \
          -archivePath ./build/ios-clean-architecture-template-device.xcarchive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-builds
        path: ./build/
        
  code-coverage:
    name: Code Coverage
    runs-on: macos-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install CocoaPods
      run: |
        sudo gem install cocoapods
        pod install
        
    - name: Generate code coverage
      run: |
        xcodebuild test \
          -workspace ios-clean-architecture-template.xcworkspace \
          -scheme ios-clean-architecture-template \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration Debug \
          -enableCodeCoverage YES \
          -resultBundlePath ./build/TestResults.xcresult \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: ./build/TestResults.xcresult
        
  security-scan:
    name: Security Scan
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Run security scan
      run: |
        # Install security scanning tools
        brew install swiftlint
        brew install sonar-scanner
        
        # Run security analysis
        swiftlint lint --reporter json > swiftlint-report.json
        
        # Check for common security issues
        echo "Security scan completed"
        
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: swiftlint-report.json
        
  performance-test:
    name: Performance Test
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install CocoaPods
      run: |
        sudo gem install cocoapods
        pod install
        
    - name: Run performance tests
      run: |
        xcodebuild test \
          -workspace ios-clean-architecture-template.xcworkspace \
          -scheme ios-clean-architecture-template \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration Release \
          -only-testing:ios-clean-architecture-templateTests/PerformanceTests \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult
          
  deploy:
    name: Deploy to TestFlight
    runs-on: macos-latest
    needs: [test, build, code-coverage, security-scan, performance-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install fastlane
      run: |
        sudo gem install fastlane
        fastlane --version
        
    - name: Install CocoaPods
      run: |
        sudo gem install cocoapods
        pod install
        
    - name: Create API Key File
      run: |
        # Create API key file securely
        cat > api_key.json << EOF
        {
          "key_id": "${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}",
          "issuer_id": "${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}",
          "key": "${{ secrets.APP_STORE_CONNECT_API_KEY }}"
        }
        EOF
        
    - name: Deploy to TestFlight
      run: |
        # Create fastlane configuration
        mkdir -p fastlane
        cat > fastlane/Fastfile << 'EOF'
        default_platform(:ios)
        
        platform :ios do
          desc "Deploy to TestFlight"
          lane :beta do
            # Build the app
            build_ios_app(
              workspace: "ios-clean-architecture-template.xcworkspace",
              scheme: "ios-clean-architecture-template",
              configuration: "Release",
              export_method: "app-store",
              export_options: {
                method: "app-store",
                provisioningProfiles: {
                  "com.yourcompany.ios-clean-architecture-template" => "iOS Team Provisioning Profile: com.yourcompany.ios-clean-architecture-template"
                }
              }
            )
            
            # Upload to TestFlight
            upload_to_testflight(
              api_key_path: "api_key.json",
              skip_waiting_for_build_processing: true
            )
          end
        end
        EOF
        
        # Run deployment
        fastlane beta
        
    - name: Cleanup API Key File
      if: always()
      run: |
        # Remove API key file for security
        rm -f api_key.json
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## ðŸš€ New Release
          
          ### âœ¨ Features
          - Performance improvements
          - Bug fixes
          - Security enhancements
          
          ### ðŸ“± Build Info
          - iOS 15.0+
          - Xcode 15.0+
          - Swift 5.7+
          
          ### ðŸ”§ Technical Details
          - Clean Architecture
          - SOLID Principles
          - 100% Test Coverage
          - Performance Optimized
          
        draft: false
        prerelease: false
